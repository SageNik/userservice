version: '3.7'
services:
  zookeeper:
    image: debezium/zookeeper:1.1
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - user_net
  kafka:
    image: debezium/kafka:1.1
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - user_net
  postgres:
    image: debezium/postgres:11
    ports:
      - 54321:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres_dev
      POSTGRES_PASSWORD: postgres
    networks:
      - user_net
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2
    ports:
      - 9200:9200
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
    networks:
      - user_net
# APP*****************************************
  userservice:
      build:
        context: .
      image: userservice:latest
      container_name: userservice
      expose:
        - 8101
      ports:
        - 8101:8101
      restart: on-failure
      depends_on:
        - postgres
      networks:
        - user_net
  connect:
    image: debezium/connect:1.1
    ports:
      - 8083:8083
    links:
      - kafka
      - postgres
      - elastic
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - user_net

volumes:
  postgres_data:
    driver: local

networks:
  user_net:
    driver: bridge
    name: "user_net"

